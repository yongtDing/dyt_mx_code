!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	0.0.0	/5e4eca42/
A1	74HC4051BQ.h	/^#define A1(/;"	d
ADC_DELAY_TIME	74HC4051BQ.c	/^#define ADC_DELAY_TIME /;"	d	file:
B1	74HC4051BQ.h	/^#define B1(/;"	d
BMP1	oledpic.h	/^unsigned char BMP1[] =$/;"	v	typeref:typename:unsigned char[]
Buffer	circular_buffer.h	/^  unsigned char *Buffer;$/;"	m	struct:CIRC_BUF	typeref:typename:unsigned char *
C1	74HC4051BQ.h	/^#define C1(/;"	d
CA	74HC4051BQ.h	/^#define CA(/;"	d
CB	74HC4051BQ.h	/^#define CB(/;"	d
CIRC_BUF	circular_buffer.h	/^typedef struct CIRC_BUF {$/;"	s
COM_CLK	uart.c	/^static rcu_periph_enum COM_CLK[COMn] = {EVAL_COM0_CLK};$/;"	v	typeref:typename:rcu_periph_enum[]	file:
COM_GPIO_CLK	uart.c	/^static rcu_periph_enum COM_GPIO_CLK[COMn] = {EVAL_COM0_GPIO_CLK};$/;"	v	typeref:typename:rcu_periph_enum[]	file:
COM_GPIO_PORT	uart.c	/^static uint32_t COM_GPIO_PORT[COMn] = {EVAL_COM0_GPIO_PORT};$/;"	v	typeref:typename:uint32_t[]	file:
COM_RX_PIN	uart.c	/^static uint32_t COM_RX_PIN[COMn] = {EVAL_COM0_RX_PIN};$/;"	v	typeref:typename:uint32_t[]	file:
COM_TX_PIN	uart.c	/^static uint32_t COM_TX_PIN[COMn] = {EVAL_COM0_TX_PIN};$/;"	v	typeref:typename:uint32_t[]	file:
COMn	uart.c	/^#define COMn /;"	d	file:
ChooseChanneC1C8	74HC4051BQ.c	/^void ChooseChanneC1C8(uint8_t data)$/;"	f	typeref:typename:void
ChooseChanneC9C16	74HC4051BQ.c	/^void ChooseChanneC9C16(uint8_t data)$/;"	f	typeref:typename:void
ChooseChanneR1R4	74HC4051BQ.c	/^void ChooseChanneR1R4(uint8_t data)$/;"	f	typeref:typename:void
ChooseEnlarge	74HC4051BQ.c	/^void ChooseEnlarge(uint8_t data)$/;"	f	typeref:typename:void
CircBuf_Alloc	circular_buffer.c	/^int CircBuf_Alloc(CircBuf_t *CBuf, unsigned int Size) {$/;"	f	typeref:typename:int
CircBuf_At	circular_buffer.c	/^unsigned char CircBuf_At(CircBuf_t *CBuf, unsigned int offset) {$/;"	f	typeref:typename:unsigned char
CircBuf_Drop	circular_buffer.c	/^void CircBuf_Drop(CircBuf_t *CBuf, unsigned int LenToDrop) {$/;"	f	typeref:typename:void
CircBuf_Free	circular_buffer.c	/^void CircBuf_Free(CircBuf_t *CBuf) {$/;"	f	typeref:typename:void
CircBuf_GetAvalaibleSize	circular_buffer.c	/^unsigned int CircBuf_GetAvalaibleSize(CircBuf_t *CBuf) {$/;"	f	typeref:typename:unsigned int
CircBuf_GetUsedSize	circular_buffer.c	/^unsigned int CircBuf_GetUsedSize(CircBuf_t *CBuf) {$/;"	f	typeref:typename:unsigned int
CircBuf_Init	circular_buffer.c	/^int CircBuf_Init(CircBuf_t *CBuf, unsigned char *Buff, unsigned int Size) {$/;"	f	typeref:typename:int
CircBuf_IsEmpty	circular_buffer.c	/^unsigned int CircBuf_IsEmpty(CircBuf_t *CBuf) {$/;"	f	typeref:typename:unsigned int
CircBuf_IsFull	circular_buffer.c	/^unsigned int CircBuf_IsFull(CircBuf_t *CBuf) {$/;"	f	typeref:typename:unsigned int
CircBuf_Pop	circular_buffer.c	/^unsigned int CircBuf_Pop(CircBuf_t *CBuf, unsigned char *data, unsigned int LenToPop) {$/;"	f	typeref:typename:unsigned int
CircBuf_PopOneChar	circular_buffer.c	/^unsigned int CircBuf_PopOneChar(CircBuf_t *CBuf, unsigned char *data) {$/;"	f	typeref:typename:unsigned int
CircBuf_Push	circular_buffer.c	/^unsigned int CircBuf_Push(CircBuf_t *CBuf, unsigned char *data, unsigned int LenToPush) {$/;"	f	typeref:typename:unsigned int
CircBuf_Read	circular_buffer.c	/^unsigned int CircBuf_Read(CircBuf_t *CBuf, unsigned char *data, unsigned int LenToRead) {$/;"	f	typeref:typename:unsigned int
CircBuf_t	circular_buffer.h	/^} CircBuf_t;$/;"	t	typeref:struct:CIRC_BUF
Config	flash.h	/^}Config;$/;"	t	typeref:struct:__anonb27d0f690108
DEV_CAN0_ID	can.c	/^#define DEV_CAN0_ID /;"	d	file:
DEV_CAN0_MASK	can.c	/^#define DEV_CAN0_MASK /;"	d	file:
DEV_CAN1_ID	can.c	/^#define DEV_CAN1_ID /;"	d	file:
DEV_CAN1_MASK	can.c	/^#define DEV_CAN1_MASK /;"	d	file:
DEV_CAN_BAUD_RATE	can.c	/^#define DEV_CAN_BAUD_RATE /;"	d	file:
DMA0_Channel0_IRQHandler	adc.c	/^void DMA0_Channel0_IRQHandler(void)$/;"	f	typeref:typename:void
DMA0_Channel3_IRQHandler	uart.c	/^void DMA0_Channel3_IRQHandler(void)$/;"	f	typeref:typename:void
DMA0_Channel4_IRQHandler	uart.c	/^void DMA0_Channel4_IRQHandler(void)$/;"	f	typeref:typename:void
EN1	74HC4051BQ.h	/^#define EN1(/;"	d
EN2	74HC4051BQ.h	/^#define EN2(/;"	d
EVAL_COM0	uart.c	/^#define EVAL_COM0 /;"	d	file:
EVAL_COM0_CLK	uart.c	/^#define EVAL_COM0_CLK /;"	d	file:
EVAL_COM0_GPIO_CLK	uart.c	/^#define EVAL_COM0_GPIO_CLK /;"	d	file:
EVAL_COM0_GPIO_PORT	uart.c	/^#define EVAL_COM0_GPIO_PORT /;"	d	file:
EVAL_COM0_RX_PIN	uart.c	/^#define EVAL_COM0_RX_PIN /;"	d	file:
EVAL_COM0_TX_PIN	uart.c	/^#define EVAL_COM0_TX_PIN /;"	d	file:
F6X8	oledfont.h	/^const unsigned char F6X8[][6] =$/;"	v	typeref:typename:const unsigned char[][6]
F8X16	oledfont.h	/^const unsigned char F8X16[]=$/;"	v	typeref:typename:const unsigned char[]
FMC_PAGE_SIZE	flash.h	/^#define FMC_PAGE_SIZE /;"	d
FMC_WRITE_END_ADDR	flash.h	/^#define FMC_WRITE_END_ADDR /;"	d
FMC_WRITE_START_ADDR	flash.h	/^#define FMC_WRITE_START_ADDR /;"	d
GREEN_LED	74HC4051BQ.h	/^#define GREEN_LED(/;"	d
GetAdcValue	adc.c	/^float GetAdcValue(uint8_t index)$/;"	f	typeref:typename:float
GetSwStatus	74HC4051BQ.c	/^uint8_t GetSwStatus(void)$/;"	f	typeref:typename:uint8_t
Hc4051AdcValue	74HC4051BQ.h	/^} Hc4051AdcValue;$/;"	t	typeref:struct:__anon7ed355ee0108
Hc4051Delay	74HC4051BQ.c	/^void Hc4051Delay(uint32_t num)$/;"	f	typeref:typename:void
Hc4051IoInit	74HC4051BQ.c	/^void Hc4051IoInit(void)$/;"	f	typeref:typename:void
Header	circular_buffer.h	/^  unsigned int Header;$/;"	m	struct:CIRC_BUF	typeref:typename:unsigned int
Hzb	oledfont.h	/^const unsigned char Hzb[][128]={$/;"	v	typeref:typename:const unsigned char[][128]
Hzk	oledfont.h	/^const unsigned char Hzk[][32]={$/;"	v	typeref:typename:const unsigned char[][32]
IIC_Ack	i2c.c	/^void IIC_Ack(u8 re)					     $/;"	f	typeref:typename:void
IIC_Delay	i2c.c	/^void IIC_Delay(unsigned int t)$/;"	f	typeref:typename:void
IIC_GPIO_Init	i2c.c	/^void IIC_GPIO_Init(void)$/;"	f	typeref:typename:void
IIC_ReadBit	i2c.c	/^u8 IIC_ReadBit(void)$/;"	f	typeref:typename:u8
IIC_ReadData	i2c.c	/^int IIC_ReadData(u8 dev_addr,u8 reg_addr,u8 *pdata,u8 count)$/;"	f	typeref:typename:int
IIC_SCL_H	i2c.c	/^#define IIC_SCL_H(/;"	d	file:
IIC_SCL_L	i2c.c	/^#define IIC_SCL_L(/;"	d	file:
IIC_SDA_H	i2c.c	/^#define IIC_SDA_H(/;"	d	file:
IIC_SDA_In	i2c.c	/^void IIC_SDA_In(void)$/;"	f	typeref:typename:void
IIC_SDA_L	i2c.c	/^#define IIC_SDA_L(/;"	d	file:
IIC_SDA_Out	i2c.c	/^void IIC_SDA_Out(void)$/;"	f	typeref:typename:void
IIC_SDA_Read	i2c.c	/^#define IIC_SDA_Read(/;"	d	file:
IIC_Start	i2c.c	/^void IIC_Start(void)								  $/;"	f	typeref:typename:void
IIC_Stop	i2c.c	/^void IIC_Stop(void)$/;"	f	typeref:typename:void
IIC_WaitAck	i2c.c	/^int IIC_WaitAck(void)$/;"	f	typeref:typename:int
IIC_WriteBit	i2c.c	/^void IIC_WriteBit(u8 Temp)$/;"	f	typeref:typename:void
IIC_WriteData	i2c.c	/^int IIC_WriteData(u8 dev_addr,u8 reg_addr,u8 data)$/;"	f	typeref:typename:int
IsPowerOf2	circular_buffer.c	/^unsigned long long IsPowerOf2(unsigned long long Num) {$/;"	f	typeref:typename:unsigned long long
MA	74HC4051BQ.h	/^#define MA(/;"	d
MAX	circular_buffer.h	/^#define MAX(/;"	d
MAX_RING_BUF_SIZE	uart.c	/^#define MAX_RING_BUF_SIZE /;"	d	file:
MB	74HC4051BQ.h	/^#define MB(/;"	d
MIN	circular_buffer.h	/^#define MIN(/;"	d
OLEDFONT_H	oledfont.h	/^#define OLEDFONT_H$/;"	d
OLED_ADDR	oled.h	/^#define OLED_ADDR /;"	d
OLED_Allfill	oled.c	/^void OLED_Allfill(void)$/;"	f	typeref:typename:void
OLED_Clear	oled.c	/^void OLED_Clear(void)$/;"	f	typeref:typename:void
OLED_Display_Off	oled.c	/^void OLED_Display_Off(void)$/;"	f	typeref:typename:void
OLED_Display_On	oled.c	/^void OLED_Display_On(void)$/;"	f	typeref:typename:void
OLED_HEIGHT	oled.h	/^#define OLED_HEIGHT /;"	d
OLED_Init	oled.c	/^void OLED_Init(void)$/;"	f	typeref:typename:void
OLED_Pow	oled.c	/^static uint32_t OLED_Pow(uint8_t a, uint8_t n)$/;"	f	typeref:typename:uint32_t	file:
OLED_Set_Position	oled.c	/^void OLED_Set_Position(uint8_t x, uint8_t y)$/;"	f	typeref:typename:void
OLED_ShowChar	oled.c	/^void OLED_ShowChar(uint8_t x, uint8_t y, uint8_t ch, uint8_t fontsize)$/;"	f	typeref:typename:void
OLED_ShowFloat	oled.c	/^void OLED_ShowFloat(uint8_t x, uint8_t y, float num, uint8_t accuracy, uint8_t fontsize)$/;"	f	typeref:typename:void
OLED_ShowHanzi	oled.c	/^void OLED_ShowHanzi(uint8_t x, uint8_t y, uint8_t no)$/;"	f	typeref:typename:void
OLED_ShowHzbig	oled.c	/^void OLED_ShowHzbig(uint8_t x, uint8_t y, uint8_t n)$/;"	f	typeref:typename:void
OLED_ShowNum	oled.c	/^void OLED_ShowNum(uint8_t x, uint8_t y, uint32_t num, uint8_t length, uint8_t fontsize)$/;"	f	typeref:typename:void
OLED_ShowPic	oled.c	/^void OLED_ShowPic(uint8_t x0, uint8_t y0, uint8_t x1, uint8_t y1, uint8_t BMP[])$/;"	f	typeref:typename:void
OLED_ShowStr	oled.c	/^void OLED_ShowStr(uint8_t x, uint8_t y, char *ch, uint8_t fontsize)$/;"	f	typeref:typename:void
OLED_WIDTH	oled.h	/^#define OLED_WIDTH /;"	d
OLED_Write_cmd	oled.c	/^void OLED_Write_cmd(uint8_t cmd)$/;"	f	typeref:typename:void
OLED_Write_data	oled.c	/^void OLED_Write_data(uint8_t data)$/;"	f	typeref:typename:void
RED_LED	74HC4051BQ.h	/^#define RED_LED(/;"	d
ReadAdcValue	74HC4051BQ.c	/^Hc4051AdcValue ReadAdcValue(void)$/;"	f	typeref:typename:Hc4051AdcValue
RoundDown_PowerOf2	circular_buffer.c	/^unsigned long RoundDown_PowerOf2(unsigned long Num) {$/;"	f	typeref:typename:unsigned long
RoundUp_PowerOf2	circular_buffer.c	/^unsigned long RoundUp_PowerOf2(unsigned long Num) {$/;"	f	typeref:typename:unsigned long
Size	circular_buffer.h	/^  unsigned int Size;$/;"	m	struct:CIRC_BUF	typeref:typename:unsigned int
Tailer	circular_buffer.h	/^  unsigned int Tailer;$/;"	m	struct:CIRC_BUF	typeref:typename:unsigned int
USART0_IRQHandler	uart.c	/^void USART0_IRQHandler(void)$/;"	f	typeref:typename:void
USART1_At	uart.c	/^unsigned char USART1_At( unsigned short offset)$/;"	f	typeref:typename:unsigned char
USART1_BUF_SIZE	uart.c	/^#define USART1_BUF_SIZE /;"	d	file:
USART1_Drop	uart.c	/^void USART1_Drop( unsigned short LenToDrop)$/;"	f	typeref:typename:void
USART1_GetDataCount	uart.c	/^unsigned int USART1_GetDataCount( void )$/;"	f	typeref:typename:unsigned int
USART1_Read	uart.c	/^unsigned int USART1_Read(unsigned char *data, unsigned short len)$/;"	f	typeref:typename:unsigned int
USART1_Recv	uart.c	/^unsigned int USART1_Recv(unsigned char *data, unsigned short len)$/;"	f	typeref:typename:unsigned int
USART1_RxBuff	uart.c	/^unsigned char USART1_RxBuff[ MAX_RING_BUF_SIZE ] = {0};$/;"	v	typeref:typename:unsigned char[]
USART1_RxCBuf	uart.c	/^CircBuf_t USART1_RxCBuf;$/;"	v	typeref:typename:CircBuf_t
USART1_TxBuff	uart.c	/^unsigned char USART1_TxBuff[ MAX_RING_BUF_SIZE ] = {0};$/;"	v	typeref:typename:unsigned char[]
WriteCmd	i2c.c	/^void WriteCmd(u8 command)$/;"	f	typeref:typename:void
WriteDat	i2c.c	/^void WriteDat(u8 data)$/;"	f	typeref:typename:void
__74HC4051B_h	74HC4051BQ.h	/^#define __74HC4051B_h$/;"	d
__ADC_h	adc.h	/^#define __ADC_h$/;"	d
__CAN_h	can.h	/^#define __CAN_h$/;"	d
__CIRC_BUF__	circular_buffer.h	/^#define __CIRC_BUF__$/;"	d
__FLASH_h	flash.h	/^#define __FLASH_h$/;"	d
__MPU6050_H__	i2c.h	/^#define __MPU6050_H__$/;"	d
__OLEDPIC_H__	oledpic.h	/^#define __OLEDPIC_H__$/;"	d
__OLED_H__	oled.h	/^#define __OLED_H__$/;"	d
__TIMER_h	timer.h	/^#define __TIMER_h$/;"	d
__UART_h	uart.h	/^#define __UART_h$/;"	d
__anon7ed355ee0108	74HC4051BQ.h	/^{$/;"	s
__anonb27d0f690108	flash.h	/^{$/;"	s
adc_config	adc.c	/^void adc_config(void)$/;"	f	typeref:typename:void
adc_init	adc.c	/^void adc_init(void)$/;"	f	typeref:typename:void
adc_raw_value	74HC4051BQ.c	/^Hc4051AdcValue adc_raw_value;$/;"	v	typeref:typename:Hc4051AdcValue
adc_v	adc.c	/^float adc_v[5] = { 0 };$/;"	v	typeref:typename:float[5]
adc_value	adc.c	/^volatile uint16_t adc_value[1][5];$/;"	v	typeref:typename:volatile uint16_t[1][5]
can0_init	can.c	/^void can0_init(void)$/;"	f	typeref:typename:void
can_config	can.c	/^void can_config(void)$/;"	f	typeref:typename:void
can_gpio_config	can.c	/^void can_gpio_config(void)$/;"	f	typeref:typename:void
dma0_ch3_usart0_tx_init	uart.c	/^void dma0_ch3_usart0_tx_init(void)$/;"	f	typeref:typename:void
dma0_ch4_usart0_rx_init	uart.c	/^void dma0_ch4_usart0_rx_init(void)$/;"	f	typeref:typename:void
dma_config	adc.c	/^void dma_config(void)$/;"	f	typeref:typename:void
dma_idle	uart.c	/^volatile uint8_t dma_idle = 1;$/;"	v	typeref:typename:volatile uint8_t
dma_send_data	uart.c	/^void dma_send_data(uint8_t *data, uint32_t len)$/;"	f	typeref:typename:void
fmc_program	flash.c	/^void fmc_program(uint32_t *data, uint32_t data_len)$/;"	f	typeref:typename:void
fmc_state	flash.c	/^__IO fmc_state_enum fmc_state = FMC_READY;$/;"	v	typeref:typename:__IO fmc_state_enum
fputc	uart.c	/^int fputc(int ch, FILE *f)$/;"	f	typeref:typename:int
g_config_params	flash.c	/^Config g_config_params = {0};$/;"	v	typeref:typename:Config
g_receive_message	can.c	/^can_receive_message_struct g_receive_message;$/;"	v	typeref:typename:can_receive_message_struct
g_transmit_message	can.c	/^can_trasnmit_message_struct g_transmit_message;$/;"	v	typeref:typename:can_trasnmit_message_struct
gd_eval_com_init	uart.c	/^void gd_eval_com_init(uint32_t com)$/;"	f	typeref:typename:void
get_config_params	flash.c	/^Config get_config_params()$/;"	f	typeref:typename:Config
get_dma_len	uart.c	/^uint32_t get_dma_len = 0;$/;"	v	typeref:typename:uint32_t
gpio_config	adc.c	/^void gpio_config(void)$/;"	f	typeref:typename:void
initcmd1	oled.c	/^uint8_t initcmd1[] = {$/;"	v	typeref:typename:uint8_t[]
load_config_params	flash.c	/^int load_config_params()$/;"	f	typeref:typename:int
max	flash.h	/^    float max[5];$/;"	m	struct:__anonb27d0f690108	typeref:typename:float[5]
nvic_config	uart.c	/^void nvic_config(void)$/;"	f	typeref:typename:void
rcu_config	adc.c	/^void rcu_config(void)$/;"	f	typeref:typename:void
read_adc_value	adc.c	/^void read_adc_value(void)$/;"	f	typeref:typename:void
save_config_params	flash.c	/^int save_config_params(Config *params)$/;"	f	typeref:typename:int
send_can0_data	can.c	/^void send_can0_data(uint32_t id, uint8_t *msg)$/;"	f	typeref:typename:void
timer_config	timer.c	/^void timer_config(uint32_t timer_periph, uint32_t time_interval_100us)$/;"	f	typeref:typename:void
timer_config2	timer.c	/^void timer_config2(uint32_t timer_periph, uint32_t time_interval_100us)$/;"	f	typeref:typename:void
u8	i2c.h	/^#define u8 /;"	d
usart0_init	uart.c	/^void usart0_init(void)$/;"	f	typeref:typename:void
value	74HC4051BQ.h	/^    uint16_t value[16][16];$/;"	m	struct:__anon7ed355ee0108	typeref:typename:uint16_t[16][16]
