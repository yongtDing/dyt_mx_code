C251 COMPILER V5.60.0,  STC32G_ADC                                                         19/09/23  11:04:35  PAGE 1   


C251 COMPILER V5.60.0, COMPILATION OF MODULE STC32G_ADC
OBJECT MODULE PLACED IN .\list\STC32G_ADC.obj
COMPILER INVOKED BY: D:\Keil_v5\C251\BIN\C251.EXE STC32G_ADC.c LARGE INTR2 ROM(COMPACT) BROWSE DEBUG PRINT(.\list\STC32G
                    -_ADC.lst) TABS(2) OBJECT(.\list\STC32G_ADC.obj) 

stmt  level    source

    1          /*---------------------------------------------------------------------*/
    2          /* --- STC MCU Limited ------------------------------------------------*/
    3          /* --- STC 1T Series MCU Demo Programme -------------------------------*/
    4          /* --- Mobile: (86)13922805190 ----------------------------------------*/
    5          /* --- Fax: 86-0513-55012956,55012947,55012969 ------------------------*/
    6          /* --- Tel: 86-0513-55012928,55012929,55012966 ------------------------*/
    7          /* --- Web: www.STCAI.com ---------------------------------------------*/
    8          /* --- Web: www.STCMCUDATA.com  ---------------------------------------*/
    9          /* --- BBS: www.STCAIMCU.com  -----------------------------------------*/
   10          /* --- QQ:  800003751 -------------------------------------------------*/
   11          /* 如果要在程序中使用此代码,请在程序中注明使用了STC的资料及程序            */
   12          /*---------------------------------------------------------------------*/
   13          
   14          #include  "STC32G_ADC.h"
   15          
   16          //========================================================================
   17          // 函数: u8 ADC_Inilize(ADC_InitTypeDef *ADCx)
   18          // 描述: ADC初始化程序.
   19          // 参数: ADCx: 结构参数,请参考adc.h里的定义.
   20          // 返回: none.
   21          // 版本: V1.0, 2012-10-22
   22          //========================================================================
   23          u8  ADC_Inilize(ADC_InitTypeDef *ADCx)
   24          {
   25   1        ADCCFG = (ADCCFG & ~ADC_SPEED_2X16T) | ADCx->ADC_Speed; //设置ADC工作时钟频率
   26   1        ADC_Justify(ADCx->ADC_AdjResult);   //AD转换结果对齐方式
   27   1      
   28   1        if(ADCx->ADC_SMPduty > 31)  return FAIL;  //错误
   29   1        if(ADCx->ADC_CsSetup > 1) return FAIL;  //错误
   30   1        if(ADCx->ADC_CsHold > 3)  return FAIL;  //错误
   31   1      
   32   1        ADCTIM = (ADCx->ADC_CsSetup << 7) | (ADCx->ADC_CsHold << 5) | ADCx->ADC_SMPduty ;   //设置 ADC 内部时序，
             -ADC采样时间建议设最大值
   33   1        return SUCCESS;
   34   1      }
   35          
   36          
   37          //========================================================================
   38          // 函数: void ADC_PowerControl(u8 pwr)
   39          // 描述: ADC电源控制程序.
   40          // 参数: pwr: 电源控制,ENABLE或DISABLE.
   41          // 返回: none.
   42          // 版本: V1.0, 2012-10-22
   43          //========================================================================
   44          void  ADC_PowerControl(u8 pwr)
   45          {
   46   1        if(pwr == ENABLE) ADC_POWER = 1;
   47   1        else        ADC_POWER = 0;
   48   1      }
   49          
   50          //========================================================================
   51          // 函数: u16  Get_ADCResult(u8 channel)
   52          // 描述: 查询法读一次ADC转换结果.
   53          // 参数: channel: 选择要转换的ADC通道.
   54          // 返回: ADC转换结果.
   55          // 版本: V1.0, 2012-10-22
   56          //========================================================================
   57          u16 Get_ADCResult(u8 channel) //channel = 0~15
C251 COMPILER V5.60.0,  STC32G_ADC                                                         19/09/23  11:04:35  PAGE 2   

   58          {
   59   1        u16 adc;
   60   1        u8  i;
   61   1      
   62   1        if(channel > ADC_CH15)  return  4096; //错误,返回4096,调用的程序判断  
   63   1        ADC_RES = 0;
   64   1        ADC_RESL = 0;
   65   1      
   66   1        ADC_CONTR = (ADC_CONTR & 0xf0) | channel; //设置ADC转换通道
   67   1        ADC_START = 1;//启动ADC转换
   68   1        NOP(10);      //对ADC_CONTR操作后要4T之后才能访问
   69   1      
   70   1        for(i=0; i<250; i++)    //超时返回，正常i等于10以内就可以转换完成
   71   1        {
   72   2          if(ADC_FLAG)
   73   2          {
   74   3            ADC_FLAG = 0; //清除ADC转换结束标志
   75   3            if(RESFMT)    //转换结果右对齐。 
   76   3            {
   77   4              adc = ((u16)ADC_RES << 8) | ADC_RESL;
   78   4            }
   79   3            else    //转换结果左对齐。 
   80   3            {
   81   4              adc = (u16)ADC_RES;
   82   4              adc = (adc << 4) | ((ADC_RESL >> 4) & 0x0f);
   83   4            }
   84   3            return  adc;
   85   3          }
   86   2        }
   87   1        return  4096; //错误,返回4096,调用的程序判断
   88   1      }


Module Information          Static   Overlayable
------------------------------------------------
  code size            =       202     ------
  ecode size           =    ------     ------
  data size            =    ------     ------
  idata size           =    ------     ------
  pdata size           =    ------     ------
  xdata size           =    ------     ------
  xdata-const size     =    ------     ------
  edata size           =    ------     ------
  bit size             =    ------     ------
  ebit size            =    ------     ------
  bitaddressable size  =    ------     ------
  ebitaddressable size =    ------     ------
  far data size        =    ------     ------
  huge data size       =    ------     ------
  const size           =    ------     ------
  hconst size          =    ------     ------
End of Module Information.


C251 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
